""" Module to Store both the attack and traffic details """

import csv
import time

class storeLogs:
    
    def AttackLogs(self,message, sid,action):

        """ Function to record attack logs generated by various modules of the IPS """
    
        event_id = 0
        file = open('attackLogs.csv', mode='a+', newline='')
    
        try:
            file.seek(0)
            reader = csv.reader(file)
            rows = list(reader)
            writer = csv.writer(file)
        
            if len(rows) > 1:
                last_row = rows[-1]
                event_id = int(last_row[0]) + 1
            else:
                writer.writerow(['EventId', 'Timestamp', 'Action', 'Message', 'Sid'])
            
            if sid is None:
                sid = "NULL"
        
            timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
            writer.writerow([event_id, timestamp, action, message, sid])
    
        finally:
            file.close()

    def TrafficLogs(self,packet_info):
    
        """ Function to recode all the traffic inspected by the IPS """
    
        event_id=0

        file = open('trafficLogs.csv', mode='a+', newline='')
        protocol = packet_info['protocol']
        source_ip = packet_info['source_ip']
        destination_ip = packet_info['destination_ip']
        source_port = packet_info['source_port']
        destination_port = packet_info['destination_port']

        try:
            file.seek(0)
            reader = csv.reader(file)
            rows = list(reader)
            writer = csv.writer(file)

            if len(rows) > 1:
                last_row = rows[-1]
                event_id = int(last_row[0]) + 1
            else:
                writer.writerow(['EventID','Timestamp', 'Protocal', 'Source IP', 'Source Port', 'Destination IP', 'Destination Port'])
        
            timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
            writer.writerow([event_id, timestamp, protocol, source_ip, source_port, destination_ip, destination_port])
    
        finally:
            file.close()
        return None

